{
    "name": "matter.js-monorepo",
    "private": true,
    "workspaces": [
        "packages/matter.js",
        "packages/matter-node.js",
        "packages/matter-node.js-examples"
    ],
    "scripts": {
        "prepare": "npm run build-clean",
        "build": "npm run build --workspaces",
        "build-clean": "npm run build-clean --workspaces",
        "build-doc": "npm run build-doc --workspaces",
        "test": "npm run test --workspaces",
        "lint": "eslint **/*.ts",
        "lint-fix": "eslint --fix **/*.ts",
        "format": "tsfmt --useTsconfig tsconfig.tsfmt.lint.json -r",
        "format-verify": "tsfmt --useTsconfig tsconfig.tsfmt.lint.json --verify",
        "matter-device": "ts-node --project packages/matter-node.js-examples/tsconfig.dist.json packages/matter-node.js-examples/src/examples/DeviceNode.ts",
        "matter-bridge": "ts-node --project packages/matter-node.js-examples/tsconfig.dist.json packages/matter-node.js-examples/src/examples/BridgedDevicesNode.ts",
        "matter-composeddevice": "ts-node --project packages/matter-node.js-examples/tsconfig.dist.json packages/matter-node.js-examples/src/examples/ComposedDeviceNode.ts",
        "matter-multidevice": "ts-node --project packages/matter-node.js-examples/tsconfig.dist.json packages/matter-node.js-examples/src/examples/MultiDeviceNode.ts",
        "matter-controller": "ts-node --project packages/matter-node.js-examples/tsconfig.dist.json packages/matter-node.js-examples/src/examples/ControllerNode.ts"
    },
    "devDependencies": {
        "@typescript-eslint/eslint-plugin": "^5.59.6",
        "@typescript-eslint/parser": "^5.59.6",
        "eslint": "^8.40.0",
        "eslint-import-resolver-typescript": "^3.5.5",
        "eslint-plugin-import": "^2.27.5",
        "typedoc": "^0.24.7",
        "typedoc-plugin-markdown": "^3.15.3",
        "typedoc-plugin-missing-exports": "^2.0.0",
        "typescript": "^4.9.5",
        "typescript-formatter": "^7.2.2"
    }
}
