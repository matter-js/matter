on:
  schedule:
    - cron: 0 2 * * * # Every day at 02:00
  workflow_dispatch: # Manually on demand
  push:
    branches:
      - chiptests

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CONNECTEDHOMEIP_TAG: "master" # v1.1.0.1 do not work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Debian deps
        id: install_deps
        run: |
          sudo apt-get update
          sudo apt-get install git gcc g++ pkg-config libssl-dev libdbus-1-dev libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev
      - name: Prepare Bin Directory
        id: prepare_bin
        run: |
          mkdir bin

      - name: Cache Bin files
        id: cache_bin
        uses: actions/cache@v3
        env:
          cache-name: chip-bin
        with:
          path: ./bin
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.CONNECTEDHOMEIP_TAG }}
      - if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
        name: Get Chip Repo
        id: connectedhomeip
        run: |
          git clone https://github.com/project-chip/connectedhomeip.git --depth=1 --branch=$CONNECTEDHOMEIP_TAG
          cd connectedhomeip
          scripts/checkout_submodules.py --shallow --platform linux
      - if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }} || contains(github.event.head_commit.message, '[rebuild-chip]') == true
        name: Build examples
        id: build_examples
        run: |
          cd connectedhomeip
          source scripts/activate.sh
          ./scripts/build/build_examples.py --target linux-x64-all-clusters --target linux-x64-all-clusters-minimal --target linux-x64-thermostat --target linux-x64-light --target linux-x64-lock --target linux-x64-shell --target linux-x64-ota-provider --target linux-x64-ota-requestor --target linux-x64-tv-app --target linux-x64-tv-casting-app --target linux-x64-bridge --target linux-x64-contact-sensor --target linux-x64-dishwasher --target linux-x64-chip-cert --target linux-x64-simulated-app1 --target linux-x64-simulated-app2 --target linux-x64-chip-tool build
      - if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }} || contains(github.event.head_commit.message, '[rebuild-chip]') == true
        name: Copy files
        id: copy_files
        run: |
          cp connectedhomeip/out/debug/chip-tool bin/
          cp connectedhomeip/out/linux-x64-tests/tests/* bin/
          rm -rf connectedhomeip
      - name: test execution
        id: test_execution
        run: |
          cd bin
          ./chip-tool
          ./chip-tool pairing onnetwork
