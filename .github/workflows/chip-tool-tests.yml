# This workflow executed the chip tool tests against matter.js
name: Chip Tool tests

on:
  schedule:
    - cron: 0 2 * * * # Every day at 02:00
  workflow_dispatch: # Manually on demand
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}-chip-tool-tests
  cancel-in-progress: true

jobs:
  head-commit-message:
    name: get head commit message
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.get_head_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Get repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_head_commit_message
        run: echo "headCommitMsg=$(git show -s --format=%s)" >> $GITHUB_OUTPUT

  # Find out what is needed to be done by this test workflow
  chip-tests-needed:
    needs: [head-commit-message]
    if: github.repository == 'project-chip/matter.js'
    runs-on: ubuntu-latest
    outputs:
      chip-changes: ${{ steps.changes.outputs.src }}
      chip-tests-required: ${{ steps.check-trigger.outputs.chip-tests-required || steps.check-rebuild.outputs.chip-tests-required || steps.check-long-tests.outputs.chip-tests-required  }}
      chip-tool-rebuild: ${{ steps.check-rebuild.outputs.chip-tool-rebuild }}
      chip-long-tests-required: ${{ steps.check-long-tests.outputs.chip-long-tests-required }}
      chip-slowapp-tests-required: ${{ steps.check-long-tests.outputs.chip-slowapp-tests-required }}
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - "chip-testing/**"
              - "packages/matter.js/src/**"
              - "packages/matter-node.js/src/**"
              - ".github/workflows/chip-tool-tests.yml"
              - "package.json"
              - "packages/**/package.json"

      - uses: dorny/paths-filter@v3
        id: changes-slowapp-tests
        with:
          filters: |
            src:
              - "packages/matter.js/src/behavior/definitions/color-control/**"
              - "packages/matter.js/src/behavior/definitions/level-control/**"
              - "packages/matter.js/src/behavior/definitions/window-covering/**"

      - uses: dorny/paths-filter@v3
        id: changes-long-tests
        with:
          filters: |
            src:
              - "packages/matter.js/src/behavior/definitions/administrator-commissioning/**"
              - "packages/matter.js/src/behavior/definitions/general-commissioning/**"
              - "packages/matter.js/src/behavior/definitions/operational-credentials/**"
              - "packages/matter.js/src/session/pase/**"
              - "packages/matter.js/src/session/case/**"

      - if: ${{ github.event_name == 'schedule' || ((github.event_name == 'push' || github.event_name == 'pull_request') && steps.changes.outputs.src == 'true') || github.event_name == 'workflow_dispatch' || contains(needs.head-commit-message.outputs.head-commit-message, '[execute-chiptests]') == true }}
        name: Chip Tool tests required to run?
        id: check-trigger
        run: echo "chip-tests-required=true" >> $GITHUB_OUTPUT

      - if: ${{ (github.event_name != 'schedule' && (steps.changes-long-tests.outputs.src == 'true' || contains(needs.head-commit-message.outputs.head-commit-message, '[execute-chiptests-long]') == true)) }}
        name: Enable slow App tests if needed
        id: check-slowapp-tests
        run: |
          echo "chip-slowapp-tests-required=true" >> $GITHUB_OUTPUT

      - if: ${{ contains(github.event.head_commit.message, '[rebuild-chip]') == true }}
        name: Chip Tool rebuild required?
        id: check-rebuild
        run: |
          echo "chip-tests-required=true" >> $GITHUB_OUTPUT
          echo "chip-tool-rebuild=true" >> $GITHUB_OUTPUT

      - name: Get Day of the week
        run: echo "DOW=$(date +%u)" >> $GITHUB_ENV

      - if: ${{ (env.DOW == 6 && github.event_name == 'schedule') || (github.event_name != 'schedule' && (steps.changes-long-tests.outputs.src == 'true' || contains(needs.head-commit-message.outputs.head-commit-message, '[execute-chiptests-long]') == true)) }}
        name: Enable Long tests if needed
        id: check-long-tests
        run: |
          echo "chip-tests-required=true" >> $GITHUB_OUTPUT
          echo "chip-slowapp-tests-required=true" >> $GITHUB_OUTPUT
          echo "chip-long-tests-required=true" >> $GITHUB_OUTPUT

  # If we need to do anything make sure that chip binaries are build and environment can be set up
  prepare-chip-build:
    needs: [chip-tests-needed]
    if: ${{ github.repository == 'project-chip/matter.js' && (needs.chip-tests-needed.outputs.chip-tool-rebuild == 'true' || needs.chip-tests-needed.outputs.chip-tests-required == 'true' || needs.chip-tests-needed.outputs.chip-changes == 'true' || needs.chip-tests-needed.outputs.chip-long-tests-required == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Prepare chip tests and rebuild chip-tool if needed
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: ${{ needs.chip-tests-needed.outputs.chip-tool-rebuild }}
          build-matter-js: "false"

  # Execute the core cluster tests
  chip-tests-core:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && (needs.chip-tests-needed.outputs.chip-tool-rebuild == 'true' || needs.chip-tests-needed.outputs.chip-tests-required == 'true' || needs.chip-tests-needed.outputs.chip-changes == 'true' || needs.chip-tests-needed.outputs.chip-long-tests-required == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: "false"

      - name: 0.8-API Core - Run Core cluster tests using the python parser sending commands to chip-tool from yaml files
        id: test-execution-08-core
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_ACE_*,Test_TC_ACL_*,Test_AddNewFabricFromExistingFabric,Test_TC_BINFO_*,Test_TC_BRBINFO_*,Test_TC_CADMIN_*,Test_TC_CGEN_*,Test_TC_CNET_*,Test_TC_DGGEN_*,Test_TC_DESC_*,Test_TC_OPCREDS_*,TestAccessControlC*,TestArmFailSafe,TestCASERecovery,TestCommandsById,TestCommissionerNodeId,TestCommissioningWindow,TestFabricRemovalWhileSubscribed,TestGeneralCommissioning,TestMultiAdmin,TestOperationalCredentialsCluster,TestSelfFabricRemoval,TestSubscribe_*,TestDiscovery}" \
              --target-skip-glob "{Test_TC_ACE_1_6*}" \
              run \
              --iterations 1 \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestApp.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestApp.js \
              --tv-app ../chip-testing/dist/esm/TvTestApp.js \
            '

  # Execute the fast application cluster tests
  chip-tests-app-fast:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && (needs.chip-tests-needed.outputs.chip-tool-rebuild == 'true' || needs.chip-tests-needed.outputs.chip-tests-required == 'true' || needs.chip-tests-needed.outputs.chip-changes == 'true' || needs.chip-tests-needed.outputs.chip-long-tests-required == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: "false"

      - name: 0.8-API App - Run fast application cluster tests using the python parser sending commands to chip-tool from yaml files
        id: test-execution-08-app-fast
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_APBSC_*,Test_TC_BOOL_*,Test_TC_FLABEL_*,Test_TC_FLW_*,Test_TC_I_*,Test_TC_LCFG_*,Test_TC_LOWPOWER_*,Test_TC_LTIME_*,Test_TC_LUNIT_*,Test_TC_MOD_*,Test_TC_OCC_*,Test_TC_OO_*,Test_TC_PCC_*,Test_TC_PRS_*,Test_TC_PS_*,Test_TC_RH_*,Test_TC_SWTCH_*,Test_TC_TMP_*,Test_TC_TSUIC_*,Test_TC_ULABEL_*,Test_TC_WAKEONLAN_*,TestUserLabelCluster*}" \
              run \
              --iterations 1 \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestApp.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestApp.js \
              --tv-app ../chip-testing/dist/esm/TvTestApp.js \
            '

  # Execute the slower (because simulated) application cluster tests
  chip-tests-app-slow:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && (needs.chip-tests-needed.outputs.chip-tool-rebuild == 'true' || needs.chip-tests-needed.outputs.chip-slowapp-tests-required == 'true' || needs.chip-tests-needed.outputs.chip-changes == 'true' || needs.chip-tests-needed.outputs.chip-long-tests-required == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: "false"

      - name: 0.8-API App - Run slower application cluster tests using the python parser sending commands to chip-tool from yaml files
        id: test-execution-08-app-slow
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_CC_*,Test_TC_LVL_*,Test_TC_WNCV_*}" \
              run \
              --iterations 1 \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestApp.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestApp.js \
              --tv-app ../chip-testing/dist/esm/TvTestApp.js \
            '

  chip-tests-legacy:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && (needs.chip-tests-needed.outputs.chip-tool-rebuild == 'true' || needs.chip-tests-needed.outputs.chip-tests-required == 'true' || needs.chip-tests-needed.outputs.chip-changes == 'true' || needs.chip-tests-needed.outputs.chip-long-tests-required == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: "false"

      - name: Legacy-API - Run Tests using the python parser sending commands to chip-tool from yaml files
        id: test-execution-legacy
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_ACE_*,Test_TC_ACL_*,Test_AddNewFabricFromExistingFabric,Test_TC_BINFO_*,Test_TC_BRBINFO_*,Test_TC_CADMIN_*,Test_TC_CGEN_*,Test_TC_CNET_*,Test_TC_DESC_*,Test_TC_?LABEL_*,Test_TC_OO_*,Test_TC_OPCREDS_*,TestAccessControlC*,TestArmFailSafe,TestCASERecovery,TestCommandsById,TestAccessControlC*,TestCommissionerNodeId,TestCommissioningWindow,TestFabricRemovalWhileSubscribed,TestGeneralCommissioning,TestMultiAdmin,TestOperationalCredentialsCluster,TestSelfFabricRemoval,TestSubscribe_*,TestUserLabelCluster*,TestDiscovery}" \
              --target-skip-glob "{Test_TC_ACE_1_6*}" \
              run \
              --iterations 1 \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestAppLegacy.js \
            '

  chip-tests-long:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && needs.chip-tests-needed.outputs.chip-long-tests-required == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: 'false'

      - name: 0.8-API - Long Test execution
        id: test-execution-long-08
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_CADMIN_1_3,Test_TC_CADMIN_1_4,Test_TC_CADMIN_1_5,Test_TC_CADMIN_1_6,Test_TC_CADMIN_1_9,Test_TC_CADMIN_1_10,Test_TC_CADMIN_1_16,Test_TC_CADMIN_1_23,Test_TC_CADMIN_1_24}" \
              --include-tags MANUAL \
              run \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestApp.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestApp.js \
            '

  chip-tests-long-legacy:
    needs: [prepare-chip-build]
    if: ${{ github.repository == 'project-chip/matter.js' && needs.chip-tests-needed.outputs.chip-long-tests-required == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: 'false'

      - name: Legacy-API - Long Test execution
        id: test-execution-long-legacy
        shell: bash
        run: |
          cd connectedhomeip
          ./scripts/run_in_build_env.sh  \
            './scripts/tests/run_test_suite.py \
              --runner chip_tool_python \
              --chip-tool ../bin/chip-tool \
              --log-level info \
              --target-glob "{Test_TC_CADMIN_1_3,Test_TC_CADMIN_1_4,Test_TC_CADMIN_1_5,Test_TC_CADMIN_1_6,Test_TC_CADMIN_1_9,Test_TC_CADMIN_1_10,Test_TC_CADMIN_1_16,Test_TC_CADMIN_1_23,Test_TC_CADMIN_1_24}" \
              --include-tags MANUAL \
              run \
              --all-clusters-app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js \
              --bridge-app ../chip-testing/dist/esm/BridgeTestAppLegacy.js \
            '

  python-repl-tests:
    needs: [prepare-chip-build]

    env:
      TSAN_OPTIONS: "halt_on_error=1 suppressions=scripts/tests/chiptest/tsan-linux-suppressions.txt"

    runs-on: ubuntu-latest

    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: 'false'

      - name: 0.8-API - Run Tests
        id: python-tests-08
        shell: bash
        # TC_DeviceBasicComposition.py can be tried again when we removed Scenes cluster/reimplemented it
        run: |
          cd connectedhomeip
          mkdir -p out/trace_data
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DeviceBasicComposition.py" --script-args "--storage-path admin_storage.json --manual-code 10054912339 --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --PICS src/app/tests/suites/certification/ci-pics-values --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_3.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto --int-arg PIXIT.ACE.APPENDPOINT:1 PIXIT.ACE.APPDEVTYPEID:0x0101 --string-arg PIXIT.ACE.APPCLUSTER:OnOff PIXIT.ACE.APPATTRIBUTE:OnOff"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_5.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACL_2_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACL_2_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_CGEN_2_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_5.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_7.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DGGEN_3_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_IDM_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_IDM_1_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_OPCREDS_3_1.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_OPCREDS_3_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestApp.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_SC_3_6.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'

  python-repl-tests-legacy:
    needs: [prepare-chip-build]

    env:
      TSAN_OPTIONS: "halt_on_error=1 suppressions=scripts/tests/chiptest/tsan-linux-suppressions.txt"

    runs-on: ubuntu-latest

    steps:
      - name: Check out matter.js
        uses: actions/checkout@v4

      - name: Initialize chip tests
        uses: ./.github/actions/prepare-chip-testing
        with:
          rebuild-chip-tool: 'false'

      - name: Legacy-API - Run Tests
        id: python-tests-legacy
        shell: bash
        run: |
          cd connectedhomeip
          mkdir -p out/trace_data
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DeviceBasicComposition.py" --script-args "--storage-path admin_storage.json --manual-code 10054912339 --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --PICS src/app/tests/suites/certification/ci-pics-values --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_3.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto --int-arg PIXIT.ACE.APPENDPOINT:1 PIXIT.ACE.APPDEVTYPEID:0x0101 --string-arg PIXIT.ACE.APPCLUSTER:OnOff PIXIT.ACE.APPATTRIBUTE:OnOff"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACE_1_5.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACL_2_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_ACL_2_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_CGEN_2_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_5.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_DA_1_7.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_IDM_1_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_IDM_1_4.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_OPCREDS_3_1.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_OPCREDS_3_2.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'
          ./scripts/run_in_python_env.sh out/venv './scripts/tests/run_python_test.py --app ../chip-testing/dist/esm/AllClustersTestAppLegacy.js --factoryreset --app-args "--discriminator 1234 --KVS kvs1" --script "src/python_testing/TC_SC_3_6.py" --script-args "--storage-path admin_storage.json --commissioning-method on-network --discriminator 1234 --passcode 20202021 --bool-arg allow_sdk_dac:true --PICS src/app/tests/suites/certification/ci-pics-values --trace-to json:out/trace_data/test-{SCRIPT_BASE_NAME}.json --trace-to perfetto:out/trace_data/test-{SCRIPT_BASE_NAME}.perfetto"'

